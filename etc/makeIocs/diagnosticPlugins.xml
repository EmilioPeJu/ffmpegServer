<?xml version="1.0" ?>
<components arch="linux-x86">
	<areaDetector.NDROI ADDR="0" Enabled="1" NDARRAY_ADDR="0" NDARRAY_PORT="$(CAM)" P="$(P)" PORT="$(PORTPREFIX).ROI" R=":ROI:" TIMEOUT="1"/>
	<areaDetector.NDProcess ADDR="0" Enabled="1" NDARRAY_ADDR="0" NDARRAY_PORT="$(PORTPREFIX).ROI" P="$(P)" PORT="$(PORTPREFIX).PROC" R=":PROC:" TIMEOUT="1"/>
	<areaDetector.NDStats ADDR="0" Enabled="1" HIST_SIZE="$(HIST_SIZE=256)" NDARRAY_ADDR="0" NDARRAY_PORT="$(PORTPREFIX).PROC" P="$(P)" PORT="$(PORTPREFIX).STAT" R=":STAT:" TIMEOUT="1" XSIZE="$(XSIZE=1024)" YSIZE="$(YSIZE=768)"/>
	<areaDetector.NDStdArrays ADDR="0" FTVL="UCHAR" NDARRAY_ADDR="0" NDARRAY_PORT="$(PORTPREFIX).PROC" NELEMENTS="$(NELEMENTS=786432)" P="$(P)" PORT="$(PORTPREFIX).ARR" R=":ARR:" TIMEOUT="1" TYPE="Int8"/>
	<areaDetector.NDFileHDF5 ADDR="0" NDARRAY_ADDR="0" NDARRAY_PORT="$(PORTPREFIX).PROC" P="$(P)" PORT="$(PORTPREFIX).HDF5" R=":HDF5:" TIMEOUT="1"/>
	<ffmpegServer.ffmpegFile ADDR="0" Enabled="1" NDARRAY_ADDR="0" NDARRAY_PORT="$(PORTPREFIX).PROC" P="$(P)" PORT="$(PORTPREFIX).FIMG" R=":FIMG:" TIMEOUT="1"/>
	<areaDetector.NDOverlay ADDR="0" Enabled="1" NDARRAY_ADDR="0" NDARRAY_PORT="$(PORTPREFIX).PROC" P="$(P)" PORT="$(PORTPREFIX).OVER" R=":OVER:" TIMEOUT="1"/>
	<ffmpegServer.ffmpegStream ADDR="0" HTTP_PORT="8090" NDARRAY_ADDR="0" NDARRAY_PORT="$(PORTPREFIX).OVER" P="$(P)" PORT="$(PORTPREFIX).MJPG" R=":MJPG:" TIMEOUT="1"/>
	<EPICS_BASE.StartupCommand command="dbpf &quot;$(P):FIMG:FilePath&quot;, &quot;/tmp&quot;" post_init="True"/>
	<EPICS_BASE.StartupCommand command="dbpf &quot;$(P):FIMG:FileName&quot;, &quot;testvideo&quot;" post_init="True"/>
	<EPICS_BASE.StartupCommand command="dbpf &quot;$(P):FIMG:FileTemplate&quot;, &quot;%s/%s_%d.avi&quot;" post_init="True"/>
	<EPICS_BASE.StartupCommand command="dbpf &quot;$(P):HDF5:FilePath&quot;, &quot;/tmp&quot;" post_init="True"/>
	<EPICS_BASE.StartupCommand command="dbpf &quot;$(P):HDF5:FileName&quot;, &quot;testdata&quot;" post_init="True"/>
	<EPICS_BASE.StartupCommand command="dbpf &quot;$(P):HDF5:FileTemplate&quot;, &quot;%s/%s_%d.h5&quot;" post_init="True"/>
	<EPICS_BASE.StartupCommand command="dbpf &quot;$(P):HDF5:AutoSave&quot;, &quot;No&quot;" post_init="True"/>
	<EPICS_BASE.StartupCommand command="dbpf &quot;$(P):HDF5:EnableCallbacks&quot;, &quot;Enable&quot;" post_init="True"/>
	<EPICS_BASE.StartupCommand command="dbpf &quot;$(P):HDF5:FileWriteMode&quot;, &quot;Stream&quot;" post_init="True"/>
	<EPICS_BASE.StartupCommand command="dbpf &quot;$(P):STAT:ComputeProfiles&quot;, &quot;Yes&quot;" post_init="True"/>
	<EPICS_BASE.StartupCommand command="dbpf &quot;$(P):STAT:ComputeStatistics&quot;, &quot;No&quot;" post_init="True"/>
	<EPICS_BASE.StartupCommand command="dbpf &quot;$(P):STAT:ComputeCentroid&quot;, &quot;$(ComputeCentroid=No)&quot;" post_init="True"/>
	<EPICS_BASE.StartupCommand command="dbpf &quot;$(P):STAT:CentroidThreshold&quot;, &quot;50&quot;" post_init="True"/>
	<EPICS_BASE.StartupCommand command="dbpf &quot;$(P):OVER:1:Green&quot;, &quot;255&quot;" post_init="True"/>
	<EPICS_BASE.StartupCommand command="dbpf &quot;$(P):OVER:1:Shape&quot;, &quot;Cross&quot;" post_init="True"/>
	<!--Sync STAT cursor position with grid position-->
	<records.longout OUT="$(P):STAT:CursorX PP" record="$(P):MJPG:GX"/>
	<records.longout OUT="$(P):STAT:CursorY PP" record="$(P):MJPG:GY"/>
	<records.longout DOL="$(P):STAT:CentroidX_RBV CP" record="$(P):OVER:1:PositionXLink"/>
	<records.longout DOL="$(P):STAT:CentroidY_RBV CP" record="$(P):OVER:1:PositionYLink"/>
	<records.longout DOL="$(P):STAT:SigmaX_RBV CP" record="$(P):OVER:1:SizeXLink"/>
	<records.longout DOL="$(P):STAT:SigmaY_RBV CP" record="$(P):OVER:1:SizeYLink"/>
	<records.longout DRVL="4" VAL="100000" record="$(P):ROI:SizeX"/>
	<records.longout DRVL="4" VAL="100000" record="$(P):ROI:SizeY"/>
	<records.longout DRVL="0" VAL="100000" record="$(P):ROI:SizeZ"/>
	<records.longout VAL="5" record="$(P):PROC:NumFilter"/>	
	<records.bo DOL="$(P):STAT:ComputeCentroid_RBV CP" OMSL="closed_loop" record="$(P):OVER:1:Use"/>
</components>
