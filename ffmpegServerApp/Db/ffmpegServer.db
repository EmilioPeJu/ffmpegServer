# Macros:
#% macro, P, Device Prefix
#% macro, R, Device Suffix
#% macro, PORT, Asyn Port name

## JPEG Quality
record(ao, "$(P)$(R)QUALITY") {
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT) 0)FFMPEG_QUALITY")
}

## JPEG Quality Readback from driver
record(ai, "$(P)$(R)QUALITY_RBV") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT) 0)FFMPEG_QUALITY")
  field(PINI, "YES")
}

## Toggle False colour mode 
record(bo, "$(P)$(R)FALSE_COL") {
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT) 0)FFMPEG_FALSE_COL")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(VAL, "0")
  field(PINI, "1")  
}

## False colour mode readback from driver
record(bi, "$(P)$(R)FALSE_COL_RBV") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT) 0)FFMPEG_FALSE_COL")
  field(ZNAM, "Off")
  field(ONAM, "On") 
}

## Always produce jpegs, even when no-one is listening
record(bo, "$(P)$(R)ALWAYS_ON") {
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT) 0)FFMPEG_ALWAYS_ON")
  field(ZNAM, "Off")
  field(ONAM, "On") 
  field(VAL, "0")  
  field(PINI, "1")  
}

## Always on readback from driver
record(bi, "$(P)$(R)ALWAYS_ON_RBV") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT) 0)FFMPEG_ALWAYS_ON")
  field(ZNAM, "Off")
  field(ONAM, "On") 
}

## HTTP Port to connect an mjpg viewer to
record(ai, "$(P)$(R)HTTP_PORT_RBV")
{
    field(PINI, "1")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT) 0)FFMPEG_HTTP_PORT")
    field(SCAN, "I/O Intr")
}

## hostname to look at
record(stringin, "$(P)$(R)HOST_RBV")
{
    field(PINI, "1")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT) 0)FFMPEG_HOST")
    field(SCAN, "I/O Intr")
}

## Number of clients
record(ai, "$(P)$(R)CLIENTS_RBV")
{
    field(PINI, "1")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT) 0)FFMPEG_CLIENTS")
    field(SCAN, "I/O Intr")
}
